import { addPrototype } from "../../utils";
import * as method from "./method";

declare global {
  interface Object {
    $mapValues(fn: (value: any, key: string, object: object) => any): object;
  }
}

/**
 * Creates an object with the same keys as the provided object and values
 * generated by running the provided function for each value
 * @memberof Object.prototype
 * @function $mapValues
 * @param {Function} fn
 * @returns {Object}
 * @example
 * const users = {
 *   fred: { user: "fred", age: 40 },
 *   pebbles: { user: "pebbles", age: 1 }
 * };
 * users.$mapValues(u => u.age); // { fred: 40, pebbles: 1 }
 */
addPrototype(Object, "$mapValues", function(this: object, fn: (value: any, key: string, object: object) => any) {
  return method(this, fn);
});
